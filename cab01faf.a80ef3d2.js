(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{114:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return u}));var a=t(1),o=t(6),r=(t(0),t(119)),i={},c={id:"config/navigation",title:"navigation",description:"# Navigation",source:"@site/docs/config/navigation.md",permalink:"/docs/config/navigation",sidebar:"docs",previous:{title:"plugins",permalink:"/docs/config/plugins"},next:{title:"dynamisation",permalink:"/docs/dynamisation/dynamisation"}},l=[{value:"Install",id:"install",children:[]},{value:"Cr\xe9er une bottom bar",id:"cr\xe9er-une-bottom-bar",children:[]},{value:"Afficher ou non la bottom bar",id:"afficher-ou-non-la-bottom-bar",children:[]},{value:"Header",id:"header",children:[]},{value:"Le header de react-navigation",id:"le-header-de-react-navigation",children:[]},{value:"Un header custom",id:"un-header-custom",children:[]}],s={rightToc:l};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"navigation"},"Navigation"),Object(r.b)("p",null,"Modules permettant de cr\xe9er toute navigation dans l'app"),Object(r.b)("h2",{id:"install"},"Install"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i --save react-navigation react-navigation-stack react-navigation-tabs react-native-gesture-handler react-native-reanimated\n")),Object(r.b)("h2",{id:"cr\xe9er-une-bottom-bar"},"Cr\xe9er une bottom bar"),Object(r.b)("p",null,"Voici un exemple avec usage d'icones:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"import Icon from 'react-native-vector-icons/SimpleLineIcons';\nimport EvilIcon  from 'react-native-vector-icons/EvilIcons';\n\n...\n\nconst TabNavigator = createBottomTabNavigator(\n  {\n    Accueil: HomeStack,\n    Participez: ParticipezScreen,\n    Profil: ProfilScreen,\n    Plus: PlusScreen\n  },\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      tabBarIcon: ({ focused, horizontal, tintColor }) => {\n        const { routeName } = navigation.state;\n        let IconComponent = Icon;\n        let iconName;\n        if (routeName === 'Accueil') {\n          IconComponent = Icon;\n          iconName = `home`;\n          // Sometimes we want to add badges to some icons.\n          // You can check the implementation below.\n          //IconComponent = HomeIconWithBadge;\n        } else if (routeName === 'Participez') {\n          IconComponent = Icon;\n          iconName = `event`;\n        } else if (routeName === 'Profil') {\n          IconComponent = EvilIcon;\n          iconName = `user`;\n        } else if (routeName === 'Plus') {\n          IconComponent = Icon;\n          iconName = `menu`;\n        }\n\n        // You can return any component that you like here!\n        return <IconComponent name={iconName} size={25} color={tintColor} style={{marginTop: 10}}/>;\n      },\n      // tabBarOptions: {\n      //     activeTintColor: '#2BEDBA',\n      //     inactiveTintColor: '#000'\n      // },\n    })\n  }\n);\n")),Object(r.b)("h2",{id:"afficher-ou-non-la-bottom-bar"},"Afficher ou non la bottom bar"),Object(r.b)("p",null,"On peut supprimer la bottom bar pour une route sp\xe9cifique.\nPour une navigation de type bottom-bar->stacked (cf. ci-dessous), on peut v\xe9rifier que l'on est sur une route du stack en faisant ",Object(r.b)("inlineCode",{parentName:"p"},"if (navigation.state.index === 1 && navigation.state.routes[1].routeName === 'Video')")," :"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"const HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n    Category: CategoryScreen,\n    Theme: ThemeScreen,\n    Video: VideoScreen,\n  },\n  {\n    headerMode: 'none'\n  }\n);\n\nHomeStack.navigationOptions = ({ navigation }) => {\n  let tabBarVisible = true;\n  const { routeName } = navigation.state;\n\n  if (navigation.state.index === 1 && navigation.state.routes[1].routeName === 'Video') {\n    tabBarVisible = false;\n  }\n\n  return {\n    tabBarVisible,\n  };\n};\n\nconst TabNavigator = createBottomTabNavigator(\n  {\n    Accueil: HomeStack,\n    Participez: ParticipezScreen,\n    Profil: ProfilScreen,\n    Plus: PlusScreen\n  }\n);\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"HomeStack.navigationOptions = ({ navigation }) => {\n  let tabBarVisible = true;\n  const { routeName } = navigation.state;\n\n  if (navigation.state.index === 1 && navigation.state.routes[1].routeName === 'Video') {\n    tabBarVisible = false;\n  }\n\n  return {\n    tabBarVisible,\n  };\n};\n")),Object(r.b)("h2",{id:"header"},"Header"),Object(r.b)("p",null,"Il y a 2 moyens de faire le header.\n1. En utilisant le header de navigation (tr\xe8s bien pour des navigations qui ne n\xe9cessitent pas beaucoup de cusomization)\n2. En bypassant le header de navigation et en faisant son propre composant (tr\xe8s souple)"),Object(r.b)("h2",{id:"le-header-de-react-navigation"},"Le header de react-navigation"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Pour pouvoir changer des param\xe8tres dans des screens : On utilise useEffect pour r\xe9cup\xe9rer les data pass\xe9es en param de navigation qu'on r\xe9int\xe8re dans les params de navigation de ce screen. Puis on set les navigationOptions de ce screen via ",Object(r.b)("inlineCode",{parentName:"li"},"CategoryScreen.navigationOptions = ({ navigation }) => {}")," :")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"import React, {useState, useEffect} from 'react';\nimport {Text, View, ScrollView, FlatList, StatusBar} from 'react-native';\nimport SlideCategory from '../Components/SlideCategory';\n\nconst CategoryScreen = props => {\n\n    const category = props.navigation.getParam('category');\n\n    useEffect(() => {\n        props.navigation.setParams({\n            bgColor: category.attributes.field_couleur,\n            title: category.attributes.title,\n            color: '#fff'\n        })\n    }, [])\n\n  return (\n    <SafeView bgColor={category.attributes.field_couleur}>\n      <Body>\n        <View>\n          <Description>{category.attributes.field_description}</Description>\n        </View>\n        <FlatList/>\n      </Body>\n    </SafeView>\n  );\n};\n\nCategoryScreen.navigationOptions = ({ navigation }) => {\n  return {\n    title: navigation.getParam('title'),\n    headerStyle: {\n      backgroundColor: navigation.getParam('bgColor'),\n    },\n    headerTintColor: navigation.getParam('color'),\n  }\n}\n\nexport default CategoryScreen;\n")),Object(r.b)("h2",{id:"un-header-custom"},"Un header custom"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"On d\xe9sactive le header de react-navigation (",Object(r.b)("inlineCode",{parentName:"li"},"headerMode: 'none'"),")")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"const HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n    Category: CategoryScreen,\n    Theme: ThemeScreen,\n    Video: VideoScreen,\n  },\n  {\n    headerMode: 'none'\n  }\n);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"On cr\xe9e son composant Header qu'on pourra utiliser normalement dans nos screens")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"import React from 'react';\nimport {View, Text, Image, TouchableWithoutFeedback} from 'react-native';\nimport styled from 'styled-components';\n\nconst Container = styled.View`\n  background-color: ${props => (props.bgColor ? props.bgColor : 'white')};\n`;\n\nconst Logo = styled.Image`\n  height: 50;\n`;\n\nconst Header = props => (\n  <Container bgColor={props.bgColor}>\n    <TouchableWithoutFeedback onPress={() => props.navigation.goBack()}>\n          <Text>goback</Text>\n      </TouchableWithoutFeedback>\n    <Logo source={require('../Assets/Images/cc-logo-transparent.png')} />\n    {/* <TouchableWithoutFeedback onPress={() => this.props.navigation.navigate('Search')}>\n          <Icon\n              name=\"search\"\n              color=\"black\"\n              size={25}\n          />\n      </TouchableWithoutFeedback> */}\n  </Container>\n);\n\nexport default Header;\n")),Object(r.b)("p",null,"usage dans un \xe9cran :"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"const CategoryScreen = props => {\n\n  const category = props.navigation.getParam('category');\n\n  return (\n    <SafeView bgColor={category.attributes.field_couleur}>\n      <Header navigation={props.navigation} bgColor={category.attributes.field_couleur}/>\n      <Body>\n        <View>\n          <Description>{category.attributes.field_description}</Description>\n        </View>\n        ...\n")))}u.isMDXComponent=!0},119:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),u=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},p=function(e){var n=u(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),d=a,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||r;return t?o.a.createElement(m,c({ref:n},s,{components:t})):o.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<r;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);