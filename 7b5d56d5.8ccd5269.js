(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{146:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),i=(n(0),n(157)),o={},s={id:"config/plugins",title:"plugins",description:"# Plugins",source:"@site/docs/config/plugins.md",permalink:"/docs/config/plugins",sidebar:"docs",previous:{title:"setup",permalink:"/docs/setup/setup"},next:{title:"navigation",permalink:"/docs/config/navigation"}},l=[{value:"react-native-splash-screen",id:"react-native-splash-screen",children:[{value:"Install",id:"install",children:[]},{value:"IOS",id:"ios",children:[]}]},{value:"react-native-vector-icons",id:"react-native-vector-icons",children:[{value:"Install",id:"install-1",children:[]},{value:"Cr\xe9er des fonts d&#39;icones",id:"cr\xe9er-des-fonts-dicones",children:[]}]},{value:"Styles CSS",id:"styles-css",children:[]},{value:"Installer des fonts",id:"installer-des-fonts",children:[]},{value:"Player video natif",id:"player-video-natif",children:[]},{value:"Navigation avec Shared elements",id:"navigation-avec-shared-elements",children:[]},{value:"g\xe9rer l&#39;orientation par \xe9cran",id:"g\xe9rer-lorientation-par-\xe9cran",children:[]},{value:"Slider",id:"slider",children:[]}],c={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"plugins"},"Plugins"),Object(i.b)("p",null,"Pour tous les plugins RN\nUne fois l'install faite, aller dans /ios et faire ",Object(i.b)("inlineCode",{parentName:"p"},"pod update")),Object(i.b)("h2",{id:"react-native-splash-screen"},"react-native-splash-screen"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://medium.com/handlebar-labs/how-to-add-a-splash-screen-to-a-react-native-app-ios-and-android-30a3cec835ae"}),"https://medium.com/handlebar-labs/how-to-add-a-splash-screen-to-a-react-native-app-ios-and-android-30a3cec835ae")),Object(i.b)("h3",{id:"install"},"Install"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i --save react-native-splash-screen\n")),Object(i.b)("h3",{id:"ios"},"IOS"),Object(i.b)("p",null,"Dans AppDelegate.m:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Ajouter ",Object(i.b)("inlineCode",{parentName:"li"},'#import "RNSplashScreen.h" ')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"}," [RNSplashScreen show];")," \xe0 la fin de la m\xe9thode didFinishLaunchingWithOptions (avant le return YES)")),Object(i.b)("h2",{id:"react-native-vector-icons"},"react-native-vector-icons"),Object(i.b)("p",null,"Id\xe9al pour utiliser les icones fontawesome ou autre"),Object(i.b)("h3",{id:"install-1"},"Install"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i --save react-native-vector-icons\n")),Object(i.b)("p",null,"puis copier les fonts \xe0 utiliser depuis le package dans node_modules dans un r\xe9pertoire du projet\nAjouter cette ligne dans ios/pod file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'\n")),Object(i.b)("p",null,"puis dans ios : ",Object(i.b)("inlineCode",{parentName:"p"},"pod install")),Object(i.b)("h3",{id:"cr\xe9er-des-fonts-dicones"},"Cr\xe9er des fonts d'icones"),Object(i.b)("p",null,"Cr\xe9er la font : ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://medium.com/sketch-app-sources/how-to-create-font-icons-from-a-sketch-icon-library-e94fe93ed00c"}),"https://medium.com/sketch-app-sources/how-to-create-font-icons-from-a-sketch-icon-library-e94fe93ed00c")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Exporter les icons au format SVG depuis sketch (source : ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://medium.com/sketch-app-sources/how-to-create-font-icons-from-a-sketch-icon-library-e94fe93ed00c"}),"https://medium.com/sketch-app-sources/how-to-create-font-icons-from-a-sketch-icon-library-e94fe93ed00c"),")"),Object(i.b)("li",{parentName:"ol"},"G\xe9n\xe9rer la font ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://d.pr/v/YVrAsz"}),"https://d.pr/v/YVrAsz"))),Object(i.b)("h2",{id:"styles-css"},"Styles CSS"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i --save styled-components\n")),Object(i.b)("h2",{id:"installer-des-fonts"},"Installer des fonts"),Object(i.b)("p",null,"Ajouter des polices:\n1. Il faut que le nom du fichier de la police corresponde exactement au nom de la police (ce qu'on a quand on clique bouton droit/info sur le fichier)\n2. Une fois que les polices ttf sont dans un r\xe9pertoire, cr\xe9er le fichier react-native.config.js \xe0 la racine du projet"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"module.exports = {\n    assets: ['./App/Assets/Fonts/']\n};\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"react-native link")," pour les ajouter"),Object(i.b)("li",{parentName:"ol"},"on utilise une police en mettant (pour une police ttf nomm\xe9e AvantGarde-Medium.ttf) :")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"const Title = styled.Text`\n  font-family: AvantGarde-Medium;\n`;\n")),Object(i.b)("h2",{id:"player-video-natif"},"Player video natif"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i --save react-native-video\n")),Object(i.b)("h1",{id:"install-asyncstorage"},"Install asyncstorage"),Object(i.b)("p",null,"Sur Android, si cela plante a la compile, c'est que la limite des 64k files a \xe9t\xe9 franchie."),Object(i.b)("p",null,"Mettre ",Object(i.b)("inlineCode",{parentName:"p"},"multiDexEnabled true")," dans android/app/build.gradle:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'defaultConfig {\n    applicationId "com.yoodoogood.app"\n    minSdkVersion rootProject.ext.minSdkVersion\n    targetSdkVersion rootProject.ext.targetSdkVersion\n    versionCode 1\n    versionName "0.1.9"\n    multiDexEnabled true\n}\n')),Object(i.b)("h1",{id:"install-lottie"},"Install Lottie"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},'Just create a Blank Swift file on XCode. And click on the "Create Bridge Header" after this.'),Object(i.b)("li",{parentName:"ul"},"last go to Build Settings -> Always embed swift standard libraries, make it Yes."),Object(i.b)("li",{parentName:"ul"},"relaunch a pod install")),Object(i.b)("p",null,"It should work"),Object(i.b)("h1",{id:"react-native-asset"},"react-native-asset"),Object(i.b)("p",null,"j\u2019ai centralis\xe9 le preloading des assets de son : Ils sont tous preload au moment du chargement de l\u2019app, pendant le splashscreen que je prolonge de 2 secondes\nPour utiliser les sons, il suffit d\u2019important la librairie des sons pr\xe9par\xe9e :\nimport {sounds} from \u2018Screens/AuthLoading\u2019;\nPuis d\u2019utiliser les sons que l\u2019on veut :\n",Object(i.b)("inlineCode",{parentName:"p"},"sounds[\u2018mine_ambient\u2019].pause();"),"\n",Object(i.b)("inlineCode",{parentName:"p"},"sounds[\u2018mine_loser\u2019].play();")),Object(i.b)("p",null,"Pour linker automatiquement les sons dans Android et iOS :\n1. D\xe9poser les sons dans le r\xe9pertoire Assets/Sounds\n2. Le fichier react-native.config.js contient ce repertoire"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"module.exports = {\n  assets: [\n    './src/Assets/Fonts/',\n    './src/Assets/Sounds/'\n  ]\n};\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"utiliser ",Object(i.b)("inlineCode",{parentName:"li"},"./node_modules/.bin/react-native-asset")," pour les d\xe9placer et lier dynamiquement."),Object(i.b)("li",{parentName:"ol"},"Les preload dans AuthLoading.js ex. :\n",Object(i.b)("inlineCode",{parentName:"li"},"sounds.dobble_answer_ko = new Player('dobble_answer_ko.mp3')"))),Object(i.b)("h1",{id:"react-native-mopub-sdk"},"react-native-mopub-sdk"),Object(i.b)("p",null,"Pas de difficult\xe9s particuli\xe8res pour l'initilisation du module sur les banni\xe8res / interstitiel.\nIl faut bien penser \xe0 unsubscribe les diff\xe9rents events que l'on \xe9coute afin de ne pas avoir de comportements bizarres."),Object(i.b)("p",null,"Par contre les rewards sont conditionn\xe9s pour s'afficher avec des param\xe8tres sp\xe9cifiques (montant du reward et unit\xe9 du reward).\nIl faut donc faire un appel ",Object(i.b)("inlineCode",{parentName:"p"},"RNMoPubRewardedVideo.availableRewardsForAdUnitID")," pour connaitre ces infos.\nDans notre cas, m\xeame si nous n'utilisons pas ces informations, cet appel est indispensable pour afficher correctement les rewards."),Object(i.b)("h2",{id:"navigation-avec-shared-elements"},"Navigation avec Shared elements"),Object(i.b)("p",null,"Pour faire des transitions avec des \xe9l\xe9ments de l'\xe9cran pr\xe9c\xe9dent qui ont une transition vers un \xe9l\xe9ment du nouvel \xe9cran."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"npm i --save react-navigation-shared-element")),Object(i.b)("h2",{id:"g\xe9rer-lorientation-par-\xe9cran"},"g\xe9rer l'orientation par \xe9cran"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"npm i --save react-native-orientation-locker\n")),Object(i.b)("h2",{id:"slider"},"Slider"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"}," npm i --save @react-native-community/slider")))}p.isMDXComponent=!0},157:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(o,".").concat(u)]||d[u]||b[u]||i;return n?r.a.createElement(m,s({ref:t},c,{components:n})):r.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);